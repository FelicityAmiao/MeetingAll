plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}

group = 'com.group8'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    maven{
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb'
    compile group: 'org.apache.poi', name: 'poi', version: '3.17'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'
    compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '3.17'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.75'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.13'
    compile group: 'org.apache.poi', name: 'poi-scratchpad', version: '3.8'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'
    compile group: 'commons-io', name: 'commons-io', version: '2.8.0'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.1')
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    // https://mvnrepository.com/artifact/commons-logging/commons-logging
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
    compile group: 'org.apache.commons', name: 'commons-email', version: '1.5'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
}

test {
    useJUnitPlatform()
}

task cpRes(type: Copy) {
    from sourceSets.main.resources
    into sourceSets.main.java.outputDir
    processResources.exclude { "**/*.*" }
}
processResources.dependsOn(cpRes)
